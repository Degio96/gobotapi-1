// Code AutoGenerated; DO NOT EDIT.

package types

import (
	"encoding/json"
	"fmt"
)

// InlineQueryResultContact Represents a contact with a phone number
// By default, this contact will be sent by the user
// Alternatively, you can use input_message_content to send a message with the specified content instead of the contact.
type InlineQueryResultContact struct {
	FirstName           string                `json:"first_name"`
	ID                  string                `json:"id"`
	InputMessageContent any                   `json:"input_message_content,omitempty"`
	LastName            string                `json:"last_name,omitempty"`
	PhoneNumber         string                `json:"phone_number"`
	ReplyMarkup         *InlineKeyboardMarkup `json:"reply_markup,omitempty"`
	ThumbnailHeight     int                   `json:"thumbnail_height,omitempty"`
	ThumbnailURL        string                `json:"thumbnail_url,omitempty"`
	ThumbnailWidth      int64                 `json:"thumbnail_width,omitempty"`
	Vcard               string                `json:"vcard,omitempty"`
}

func (entity InlineQueryResultContact) MarshalJSON() ([]byte, error) {
	alias := struct {
		Type                string                `json:"type"`
		ID                  string                `json:"id"`
		PhoneNumber         string                `json:"phone_number"`
		FirstName           string                `json:"first_name"`
		LastName            string                `json:"last_name,omitempty"`
		Vcard               string                `json:"vcard,omitempty"`
		ReplyMarkup         *InlineKeyboardMarkup `json:"reply_markup,omitempty"`
		InputMessageContent any                   `json:"input_message_content,omitempty"`
		ThumbnailURL        string                `json:"thumbnail_url,omitempty"`
		ThumbnailWidth      int64                 `json:"thumbnail_width,omitempty"`
		ThumbnailHeight     int                   `json:"thumbnail_height,omitempty"`
	}{
		Type:                "contact",
		ID:                  entity.ID,
		PhoneNumber:         entity.PhoneNumber,
		FirstName:           entity.FirstName,
		LastName:            entity.LastName,
		Vcard:               entity.Vcard,
		ReplyMarkup:         entity.ReplyMarkup,
		InputMessageContent: entity.InputMessageContent,
		ThumbnailURL:        entity.ThumbnailURL,
		ThumbnailWidth:      entity.ThumbnailWidth,
		ThumbnailHeight:     entity.ThumbnailHeight,
	}
	if !reflect.DeepEqual(entity.InputMessageContent, nil) {
		switch entity.InputMessageContent.(type) {
		case InputTextMessageContent, InputLocationMessageContent, InputVenueMessageContent, InputContactMessageContent, InputInvoiceMessageContent:
			break
		default:
			return nil, fmt.Errorf("input_message_content: unknown type: %T", entity.InputMessageContent)
		}
	}
	return json.Marshal(alias)
}

// Code AutoGenerated; DO NOT EDIT.

package types

import (
	"encoding/json"
	"fmt"
	"reflect"
)

// ReplyParameters Describes reply parameters for the message that is being sent.
type ReplyParameters struct {
	AllowSendingWithoutReply bool            `json:"allow_sending_without_reply,omitempty"`
	ChatID                   any             `json:"chat_id,omitempty"`
	MessageID                int64           `json:"message_id"`
	Quote                    string          `json:"quote,omitempty"`
	QuoteEntities            []MessageEntity `json:"quote_entities,omitempty"`
	QuoteParseMode           string          `json:"quote_parse_mode,omitempty"`
	QuotePosition            int             `json:"quote_position,omitempty"`
}

func (entity ReplyParameters) MarshalJSON() ([]byte, error) {
	if reflect.ValueOf(entity.ChatID).IsNil() {
		entity.ChatID = nil
	}
	if !reflect.ValueOf(entity.ChatID).IsNil() {
		switch entity.ChatID.(type) {
		case int, string:
			break
		default:
			return nil, fmt.Errorf("chat_id: unknown type: %T", entity.ChatID)
		}
	}
	type x0 ReplyParameters
	return json.Marshal((x0)(entity))
}

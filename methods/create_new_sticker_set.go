// Code AutoGenerated; DO NOT EDIT.

package methods

import (
	"encoding/json"
	"github.com/GoBotApiOfficial/gobotapi/types"
	rawTypes "github.com/GoBotApiOfficial/gobotapi/types/raw"
)

// CreateNewStickerSet Use this method to create a new sticker set owned by a user
// The bot will be able to edit the sticker set thus created
// Returns True on success.
type CreateNewStickerSet struct {
	Name            string               `json:"name"`
	NeedsRepainting bool                 `json:"needs_repainting,omitempty"`
	StickerFormat   string               `json:"sticker_format"`
	StickerType     string               `json:"sticker_type,omitempty"`
	Stickers        []types.InputSticker `json:"stickers,omitempty"`
	Title           string               `json:"title"`
	UserID          int64                `json:"user_id"`
}

func (entity *CreateNewStickerSet) ProgressCallable() rawTypes.ProgressCallable {
	return nil
}

func (entity *CreateNewStickerSet) Files() map[string]rawTypes.InputFile {
	return map[string]rawTypes.InputFile{}
}

func (CreateNewStickerSet) MethodName() string {
	return "createNewStickerSet"
}

func (CreateNewStickerSet) ParseResult(response []byte) (*rawTypes.Result, error) {
	var x1 struct {
		Result bool `json:"result"`
	}
	err := json.Unmarshal(response, &x1)
	if err != nil {
		return nil, err
	}
	result := rawTypes.Result{
		Kind:   types.TypeBoolean,
		Result: x1.Result,
	}
	return &result, nil
}

// Code AutoGenerated; DO NOT EDIT.

package methods

import (
	"encoding/json"
	"gobotapi/types"
	rawTypes "gobotapi/types/raw"
)

// AnswerInlineQuery Use this method to send answers to an inline query
// On success, True is returned.No more than 50 results per query are allowed.
type AnswerInlineQuery struct {
	Button        *types.InlineQueryResultsButton `json:"button,omitempty"`
	CacheTime     int                             `json:"cache_time,omitempty"`
	InlineQueryID string                          `json:"inline_query_id"`
	IsPersonal    bool                            `json:"is_personal,omitempty"`
	NextOffset    string                          `json:"next_offset,omitempty"`
	Results       []types.InlineQueryResult       `json:"results,omitempty"`
}

func (entity *AnswerInlineQuery) ProgressCallable() rawTypes.ProgressCallable {
	return nil
}

func (entity *AnswerInlineQuery) Files() map[string]rawTypes.InputFile {
	return map[string]rawTypes.InputFile{}
}

func (AnswerInlineQuery) MethodName() string {
	return "answerInlineQuery"
}

func (AnswerInlineQuery) ParseResult(response []byte) (*rawTypes.Result, error) {
	var x1 struct {
		Result bool `json:"result"`
	}
	err := json.Unmarshal(response, &x1)
	if err != nil {
		return nil, err
	}
	result := rawTypes.Result{
		Kind:   types.TypeBoolean,
		Result: x1.Result,
	}
	return &result, nil
}

// Code AutoGenerated; DO NOT EDIT.

package methods

import (
	"encoding/json"
	"fmt"
	"github.com/GoBotApiOfficial/gobotapi/types"
	rawTypes "github.com/GoBotApiOfficial/gobotapi/types/raw"
	"reflect"
)

// EditChatInviteLink Use this method to edit a non-primary invite link created by the bot
// The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights
// Returns the edited invite link as a ChatInviteLink object.
type EditChatInviteLink struct {
	ChatID             any    `json:"chat_id"`
	CreatesJoinRequest bool   `json:"creates_join_request,omitempty"`
	ExpireDate         int64  `json:"expire_date,omitempty"`
	InviteLink         string `json:"invite_link"`
	MemberLimit        int    `json:"member_limit,omitempty"`
	Name               string `json:"name,omitempty"`
}

func (entity *EditChatInviteLink) ProgressCallable() rawTypes.ProgressCallable {
	return nil
}

func (entity *EditChatInviteLink) Files() map[string]rawTypes.InputFile {
	return map[string]rawTypes.InputFile{}
}

func (entity EditChatInviteLink) MarshalJSON() ([]byte, error) {
	if !reflect.DeepEqual(entity.ChatID, nil) {
		switch entity.ChatID.(type) {
		case int, int64, string:
			break
		default:
			return nil, fmt.Errorf("chat_id: unknown type: %T", entity.ChatID)
		}
	}
	type x0 EditChatInviteLink
	return json.Marshal((x0)(entity))
}

func (EditChatInviteLink) MethodName() string {
	return "editChatInviteLink"
}

func (EditChatInviteLink) ParseResult(response []byte) (*rawTypes.Result, error) {
	var x1 struct {
		Result types.ChatInviteLink `json:"result"`
	}
	err := json.Unmarshal(response, &x1)
	if err != nil {
		return nil, err
	}
	result := rawTypes.Result{
		Kind:   types.TypeChatInviteLink,
		Result: x1.Result,
	}
	return &result, nil
}
